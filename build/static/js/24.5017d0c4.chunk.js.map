{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","pages/orders/PlaceOrderForm.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","_objectWithoutProperties","classes","classNames","_defineProperty","React","createElement","Object","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","PlaceOrderForm","_useState","useState","Date","_useState2","_slicedToArray","startDate","setStartDate","_useState3","productName","rate","brokerage","deliveryTime","firmName","quantity","bardanas","date","_useState4","logdata","setData","handleChange","_e$target","target","_objectSpread","onSubmit","_asyncToGenerator","_callee","_context","axios","post","toast","apply","Row","Col","xl","lg","md","Card","CardHeader","CardBody","Form","FormGroup","Label","for","Input","placeholder","onChange","style","width","height","DatePicker","selected","check","row","sm","size","offset","Button","onClick","ToastContainer"],"mappings":"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","file":"static/js/24.5017d0c4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row\n} from 'reactstrap';\nimport { getThemeColors } from 'utils/colors';\nimport Page from '../../components/Page';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Forms from 'react-bootstrap/Form';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function PlaceOrderForm() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [logdata, setData] = useState({\n    productName: \"\",\n    rate: \"\",\n    brokerage: \"\",\n    deliveryTime: \"\",\n    firmName: \"\",\n    quantity: \"\",\n    bardanas: \"\",\n    date: new Date(),\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setData(() => {\n      return {\n        ...logdata,\n        [name]: value\n      }\n    })\n  };\n  const onSubmit = async () => {\n    const res = await axios.post('http://localhost:5000/api/orders/placeOrder', logdata);\n    toast(\"Order Placed Successfully\");\n    // history.push('/orders')\n\n  }\n  return (\n    <div>\n      <Page title=\"Place Order\" breadcrumbs={[{ name: 'Place Order', active: true }]}>\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card>\n              <CardHeader>Please fill the following fields to place the order</CardHeader>\n              <CardBody>\n                <Form>\n                  <FormGroup>\n                    <Label for=\"firmName\">Firm Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"firmName\"\n                      placeholder=\"Enter Firm Name\"\n                      value={logdata.firmName}\n                      onChange={handleChange}\n\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"productName\">Product Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"productName\"\n                      placeholder=\"Enter Product Name\"\n                      value={logdata.productName}\n                      onChange={handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"rate\">Rate</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"rate\"\n                      placeholder=\"Enter Product Rate\"\n                      value={logdata.rate}\n                      onChange={handleChange}\n\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"brokerage\">Broker Name / Party Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"brokerage\"\n                      placeholder=\"Enter Broker Name / Party Name\"\n                      value={logdata.brokerage}\n                      onChange={handleChange}\n\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"quantity\">Quantity</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"quantity\"\n                      placeholder=\"Enter Quantity\"\n                      value={logdata.quantity}\n                      onChange={handleChange}\n\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"bardanas\">Bardana</Label>\n                    {/* <Input\n                      type=\"text\"\n                      name=\"bardanas\"\n                      placeholder=\"Enter Bardana\"\n                      value={logdata.bardanas}\n                      onChange={handleChange}\n\n                    /> */}\n                    <select\n                      value={logdata.bardanas}\n                      name=\"bardanas\"\n                      style={{ width: \"100%\", height: \"40px\" }}\n                      onChange={handleChange}\n                    >\n                      <option>Select Option</option>\n                      <option>Jute</option>\n                      <option>Plastic</option>\n                      <option>Loose</option>\n                      <option>FCI</option>\n\n                    </select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"deliveryTime\">Delivery Time</Label>\n                    <br />\n                    <select\n                      value={logdata.deliveryTime}\n                      name=\"deliveryTime\"\n                      style={{ width: \"100%\", height: \"40px\" }}\n                      onChange={handleChange}\n                    >\n                      <option>Select Number of Days</option>\n                      <option>1 day</option>\n                      <option>2 day</option>\n                      <option>3 day</option>\n                      <option>4 day</option>\n                      <option>5 day</option>\n                      <option>6 day</option>\n                      <option>7 day</option>\n                      <option>8 day</option>\n                      <option>9 day</option>\n                      <option>10 day</option>\n                      <option>11 day</option>\n                      <option>12 day</option>\n                      <option>13 day</option>\n\n                    </select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"date\">Select Date</Label>\n                    <br />\n                    <DatePicker name=\"date\" value={startDate}\n                      selected={startDate} onChange={(date) =>\n                        setStartDate(date)} />\n                  </FormGroup>\n                  <FormGroup check row>\n                    <Col sm={{ size: 10, offset: 2 }}>\n                      <Button onClick={onSubmit}>Submit</Button>\n                    </Col>\n                  </FormGroup>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Page>\n      <ToastContainer />\n\n    </div>\n  )\n}"],"sourceRoot":""}