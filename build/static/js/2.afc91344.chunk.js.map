{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","demos/chartjs.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg","components/HorizontalAvatarList.js","components/MapWithBubbles.js","components/ProductMedia.js","components/SupportTicket.js","components/UserProgressTable.js","demos/dashboardPage.js","pages/DashboardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","_objectWithoutProperties","classes","classNames","_defineProperty","React","createElement","Object","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","color","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","NumberWidget","subtitle","number","_ref$progress","progress","value","Card","body","CardText","CardTitle","Progress","style","height","IconWidget","bgColor","Icon","icon","iconProps","inverse","CardBody","size","CardSubtitle","Widget_NumberWidget","Widget_IconWidget","module","exports","HorizontalAvatarList","avatars","avatarProps","reversed","leng","count","i","avatar","isFirstItem","Fragment","Avatar","id","src","zIndex","border","marginLeft","marginBottom","marginTop","UncontrolledTooltip","delay","show","hide","target","cityScale","scaleLinear","domain","range","BubbleMap","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","cities","_inherits","_createClass","secondaryColor","lightColor","ComposableMap","projectionConfig","scale","width","ZoomableGroup","center","disablePanning","Geographies","geography","world50m","geographies","projection","Geography","default","stroke","strokeWidth","outline","hover","pressed","Markers","city","Marker","marker","cx","cy","r","population","Component","ProductMedia","image","description","right","Media","left","object","heading","statusMap","open","closed","pending","SupportTicket","date","text","status","onClick","Button","defualtProps","AvatarWithBadge","withBadge","position","UserProgressTable","headers","usersData","Table","responsive","item","productsData","product1Image","product2Image","product3Image","product4Image","product5Image","product6Image","avatarsData","user1Image","user2Image","user3Image","user4Image","user5Image","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","userProgressTableData","supportTicketsData","todosData","done","chartjs","bar","stack","options","mode","stacked","doughnut","animateScale","animateRotate","line","scaleLabel","labelString","gridLines","today","Date","lastWeek","getFullYear","getMonth","getDate","DashboardPage","_React$Component","scrollTo","primaryColor","Row","Col","lg","md","sm","xs","CardHeader","Line","Bar","ListGroup","flush","ListGroupItem","MdInsertChart","Badge","MdBubbleChart","MdShowChart","MdPieChart","CardGroup","MdThumbUp","MdRateReview","MdShare","MdPersonPin","reverse","InfiniteCalendar","selected","minDate","theme","accentColor","floatingNav","background","chevron","headerColor","selectionColor","textColor","todayColor","weekdayColor","MapWithBubbles","CardDeck","overflowX","paddingBottom","paddingTop","AnnouncementCard","header","avatarSize","buttonProps","supportTicket","TodosCard","todos"],"mappings":"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","file":"static/js/2.afc91344.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";","import Avatar from 'components/Avatar';\nimport React, { Fragment } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'utils/propTypes';\n\nconst HorizontalAvatarList = ({\n  tag: Tag,\n  avatars,\n  avatarProps,\n  reversed,\n  ...restProps\n}) => {\n  let leng = reversed ? avatars.length + 1 : 1;\n  const count = reversed ? () => leng-- : () => leng++;\n\n  return (\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\n      {avatars &&\n        avatars.map(({ avatar, name }, i) => {\n          const index = count();\n          const isFirstItem = i === 0;\n\n          return (\n            <Fragment key={index}>\n              <Avatar\n                {...avatarProps}\n                id={`HorizontalAvatarList-avatar-${index}`}\n                src={avatar}\n                style={{\n                  zIndex: index,\n                  border: '3px solid #fff',\n                  marginLeft: !isFirstItem && -20,\n                  marginBottom: '20px',\n                  marginTop:'20px'\n                }}\n              />\n\n              {!!name && (\n                <UncontrolledTooltip\n                  delay={{ show: 0, hide: 0 }}\n                  target={`HorizontalAvatarList-avatar-${index}`}>\n                  {name}\n                </UncontrolledTooltip>\n              )}\n            </Fragment>\n          );\n        })}\n    </Tag>\n  );\n};\n\nHorizontalAvatarList.propTypes = {\n  tag: PropTypes.node,\n  avatars: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  avatarProps: PropTypes.object,\n  reversed: PropTypes.bool,\n};\n\nHorizontalAvatarList.defaultProps = {\n  tag: 'div',\n  avatars: [],\n  avatarProps: {},\n  reversed: false,\n};\n\nexport default HorizontalAvatarList;\n","import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media } from 'reactstrap';\n\nimport Typography from 'components/Typography';\n\nconst ProductMedia = ({ image, title, description, right, ...restProps }) => {\n  return (\n    <Media {...restProps}>\n      <Media left>\n        <Media\n          object\n          src={image}\n          className=\"rounded mr-2 mb-2\"\n          style={{ width: 100, height: 'auto' }}\n        />\n      </Media>\n      <Media body className=\"overflow-hidden\">\n        <Media heading tag=\"h5\" className=\"text-truncate\">\n          {title}\n        </Media>\n        <p className=\"text-muted text-truncate\">{description}</p>\n      </Media>\n      <Media right className=\"align-self-center\">\n        {right && typeof right === 'string' ? (\n          <Typography type=\"h4\">{right}</Typography>\n        ) : (\n          right\n        )}\n      </Media>\n    </Media>\n  );\n};\n\nProductMedia.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  right: PropTypes.node,\n};\n\nexport default ProductMedia;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media, Button } from 'reactstrap';\n\nimport Avatar from './Avatar';\n\nconst statusMap = {\n  open: 'info',\n  closed: 'muted',\n  pending: 'success',\n};\n\nconst SupportTicket = ({\n  avatar,\n  name,\n  date,\n  text,\n  status,\n  onClick,\n  ...restProps\n}) => {\n  return (\n    <div {...restProps}>\n      <Media className=\"m-2\">\n        <Media left className=\"mr-2\">\n          <Avatar src={avatar} />\n        </Media>\n        <Media body>\n          <Media heading tag=\"h6\" className=\"m-0\">\n            {name}\n          </Media>\n          <p className=\"text-muted m-0\">\n            <small>{date}</small>\n          </p>\n        </Media>\n        <Media right className=\"align-self-center\">\n          <Button\n            color=\"link\"\n            className={`text-capitalize text-${statusMap[status]}`}\n          >\n            {status}\n          </Button>\n        </Media>\n      </Media>\n      <Media>\n        <p className=\"text-muted\">{text}</p>\n      </Media>\n    </div>\n  );\n};\n\nSupportTicket.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  text: PropTypes.string,\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\n  onClick: PropTypes.func,\n};\n\nSupportTicket.defualtProps = {\n  avatar: '',\n  name: '',\n  date: '',\n  text: '',\n  status: 'pending',\n  onClick: () => {},\n};\n\nexport default SupportTicket;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Table, Progress } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport withBadge from 'hocs/withBadge';\n\nconst AvatarWithBadge = withBadge({\n  position: 'bottom-right',\n  color: 'success',\n})(Avatar);\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize align-middle text-center\">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ avatar, name, date, progress }, index) => (\n          <tr key={index}>\n            <td className=\"align-middle text-center\">\n              <AvatarWithBadge src={avatar} />\n            </td>\n            <td className=\"align-middle text-center\">{name}</td>\n            <td className=\"align-middle text-center\">{date}</td>\n            <td className=\"align-middle text-center\">\n              <Progress value={progress} style={{ height: 5 }} />\n            </td>\n            <td className=\"align-middle text-center\">{progress}%</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n","import product1Image from 'assets/img/products/product_640-1.jpg';\nimport product2Image from 'assets/img/products/product_640-2.jpg';\nimport product3Image from 'assets/img/products/product_640-3.jpg';\nimport product4Image from 'assets/img/products/product_640-4.jpg';\nimport product5Image from 'assets/img/products/product_640-5.jpg';\nimport product6Image from 'assets/img/products/product_640-6.jpg';\n\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\nimport user6Image from 'assets/img/users/100_6.jpg';\nimport user7Image from 'assets/img/users/100_7.jpg';\nimport user8Image from 'assets/img/users/100_8.jpg';\nimport user9Image from 'assets/img/users/100_9.jpg';\nimport user10Image from 'assets/img/users/100_10.jpg';\nimport user11Image from 'assets/img/users/100_11.jpg';\nimport user12Image from 'assets/img/users/100_12.jpg';\nimport user13Image from 'assets/img/users/100_13.jpg';\nimport user14Image from 'assets/img/users/100_14.jpg';\n\nexport const productsData = [\n  {\n    id: 1,\n    image: product1Image,\n    title: 'Admin Template',\n    description: 'Responsive admin template...',\n    right: '$36',\n  },\n  {\n    id: 2,\n    image: product2Image,\n    title: 'Schedule App',\n    description: 'Manage your schedule...',\n    right: '$9',\n  },\n  {\n    id: 3,\n    image: product3Image,\n    title: 'Chat App',\n    description: 'Realtime chat application...',\n    right: '$12',\n  },\n  {\n    id: 4,\n    image: product4Image,\n    title: 'Wordpress Business Theme',\n    description: 'Over 100+ templates and pages...',\n    right: '$24',\n  },\n  {\n    id: 5,\n    image: product5Image,\n    title: 'Camera App',\n    description: 'Over 30+ filter...',\n    right: '$6.99',\n  },\n  {\n    id: 6,\n    image: product6Image,\n    title: 'Calendar App',\n    description: 'Organize your schedule...',\n    right: '$0.99',\n  },\n];\n\nexport const avatarsData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n  },\n  {\n    avatar: user7Image,\n    name: 'Merry',\n    date: '3 month ago',\n  },\n  {\n    avatar: user8Image,\n    name: 'John',\n    date: '1 month ago',\n  },\n  {\n    avatar: user9Image,\n    name: 'Shane',\n    date: '7 month ago',\n  },\n  {\n    avatar: user10Image,\n    name: 'Star',\n    date: '1 year ago',\n  },\n  {\n    avatar: user11Image,\n    name: 'Jenny',\n    date: '3 month ago',\n  },\n  {\n    avatar: user12Image,\n    name: 'Park',\n    date: '4 month ago',\n  },\n  {\n    avatar: user13Image,\n    name: 'Dave',\n    date: '9 month ago',\n  },\n  {\n    avatar: user14Image,\n    name: 'Jackson',\n    date: '10 month ago',\n  },\n];\n\nexport const userProgressTableData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n    progress: 75,\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n    progress: 60,\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n    progress: 50,\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n    progress: 40,\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n    progress: 30,\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n    progress: 25,\n  },\n];\n\nexport const supportTicketsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    name: 'Sim',\n    date: '30 mins ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'pending',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    name: 'Jane',\n    date: '1 hour ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'open',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    name: 'Tom',\n    date: 'yesterday',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'closed',\n  },\n];\n\nexport const todosData = [\n  { id: 1, title: 'task -1', done: true },\n  { id: 2, title: 'task -2', done: false },\n  { id: 3, title: 'task -3', done: true },\n  { id: 4, title: 'task -4', done: true },\n  { id: 5, title: 'task -5', done: false },\n];\n\nexport const chartjs = {\n  bar: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Expense for this year',\n          backgroundColor: '#6a82fb',\n          stack: 'Expense',\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\n        },\n        {\n          label: 'Expense for last year',\n          backgroundColor: '#fc5c7d',\n          stack: 'Expense',\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n      },\n    },\n  },\n  doughnut: {\n    data: {\n      datasets: [\n        {\n          data: [20, 30, 40, 50, 60],\n          backgroundColor: [\n            '#6a82fb',\n            '#fc5c7d',\n            '#45b649',\n            '#00c9ff',\n            '#ffd700',\n          ],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Doughnut Chart',\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n    },\n  },\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Revenue for this year',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n\n        {\n          label: 'Revenue for last year',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart - Stacked Area',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Userssss</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}